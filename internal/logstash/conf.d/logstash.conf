input {
  file {
    path => "/usr/share/logstash/logs/app.log"
    start_position => "beginning"
    sincedb_path => "/dev/null"
    codec => "json"
  }
}

filter {
  if ![server_id] {
    drop { }
  }

  date {
    match => [ "timestamp", "ISO8601" ]
    target => "@timestamp"
  }

  mutate {
    add_field => { "service" => "vcs_sms" }
    add_field => { "environment" => "development" }
    add_field => { "log_type" => "server_check" }
  }

  if [level] {
    mutate {
      add_field => { "log_level" => "%{level}" }
    }
  }

  if [caller] {
    grok {
      match => { "caller" => "%{DATA:source_file}:%{NUMBER:source_line}" }
    }
  }

  if [response_time] {
    mutate {
      convert => { "response_time" => "integer" }
    }
  }

  if [status] {
    mutate {
      uppercase => [ "status" ]
    }
  }
}

output {
  elasticsearch {
    hosts => ["http://elasticsearch:9200"]
    index => "vcs-sms-server-checks-%{+YYYY.MM.dd}"
  }

  stdout {
    codec => rubydebug
  }
}